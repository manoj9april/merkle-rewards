# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Fetch updated files
        run: |
          git diff --name-only HEAD~1 HEAD 
# | grep "socializing-pool-merkle/" >> $GITHUB_OUTPUT
        id: fetch_updated_files
      
      # - name: Upload to IPFS
      #   # You may pin to the exact commit or the version.
      #   # uses: aquiladev/ipfs-action@12cc5d253735dc2894fe19828bd042c8532acc5d
      #   uses: aquiladev/ipfs-action@v0.3.1
      #   with:
      #     # Directory path to upload
      #     path: ${steps.fetch_updated_files.outputs}
      #     # Pin object when adding
      #     # pin: # optional, default is true
      #     # Human name for pin
      #     # pinName: # optional
      #     # Type of target service to upload. Supported services [ipfs, pinata, infura, filebase]
      #     service: infura # optional, default is ipfs
      #     # [infura] Project ID. Required for infura service
      #     infuraProjectId: ${{ secrets.INFURA_PROJECT_ID }} # optional
      #     # [infura] Project Secret. Required for infura service
      #     infuraProjectSecret: ${{ secrets.INFURA_PROJECT_SECRET }} # optional
      #     # Request timeout
      #     # timeout: # optional, default is 60000
      #     # Level of verbosity
      #     # verbose: # optional
      #     # [ipfs] IPFS host
      #     # host: # optional, default is ipfs.io
      #     # [ipfs] IPFS port
      #     # port: # optional, default is 5001
      #     # [ipfs] IPFS protocol
      #     # protocol: # optional, default is https
      #     # [ipfs] IPFS headers as json object
      #     # headers: # optional, default is {}
      #     # [ipfs] IPNS key name. IPNS key will be published when the key parameter is provided. The key will be created if it does not exist
      #     # key: # optional
      #     # [pinata] API Key. Required for pinata service
      #     # pinataKey: # optional
      #     # [pinata] Secret Key. Required for pinata service
      #     # pinataSecret: # optional
      #     # [pinata] Human name for pin
      #     # pinataPinName: # optional
      #     # [filebase] Bucket Name. Required for Filebase service
      #     # filebaseBucket: # optional
      #     # [filebase] Api Key. Required for Filebase service
      #     # filebaseKey: # optional
      #     # [filebase] Secret Api Key. Required for Filebase service
      #     # filebaseSecret: # optional
