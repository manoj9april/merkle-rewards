# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v2
      
      - name: Fetch updated files
        uses: tj-actions/changed-files@v39
        with:
          files_yaml: |
            json: socializing-pool-merkle/**
        id: changed-files-yaml
        
      - name: Run step if test file(s) change
        if: steps.changed-files-yaml.outputs.json_all_changed_files_count != '1'
        run: |
          echo "ERROR: no or more than one file changed in socializing-pool-merkle folder"
          echo "Files changed in socializing-pool-merkle folder: ${{ steps.changed-files-yaml.outputs.json_all_changed_files }}"
          exit 1

      - name: Checkout github repo
        uses: actions/checkout@v2
      
      - name: Upload to IPFS
        # You may pin to the exact commit or the version.
        # uses: aquiladev/ipfs-action@12cc5d253735dc2894fe19828bd042c8532acc5d
        uses: aquiladev/ipfs-action@v0.3.1
        with:
          # Directory path to upload
          path: ${steps.fetch_updated_files.outputs}
          # Type of target service to upload. Supported services [ipfs, pinata, infura, filebase]
          service: infura # optional, default is ipfs
          # [infura] Project ID. Required for infura service
          infuraProjectId: ${{ secrets.INFURA_PROJECT_ID }} # optional
          # [infura] Project Secret. Required for infura service
          infuraProjectSecret: ${{ secrets.INFURA_PROJECT_SECRET }} # optional

